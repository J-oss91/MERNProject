{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JoscelynD\\\\Desktop\\\\Wise2\\\\projects\\\\Mod2Project\\\\quiz-app\\\\src\\\\components\\\\Quiz.js\";\nimport React, { Component } from 'react';\nimport QuizData from './QuizData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userAnswer: null,\n      currentIndex: 0,\n      options: [],\n      quizEnd: false,\n      score: 0,\n      disabled: true,\n      feedback: null // New state to store feedback message\n    };\n    // Function to handle user's answer selection and go to the next question\n    this.handleOptionClick = answer => {\n      const {\n        currentIndex\n      } = this.state;\n      const correctAnswer = QuizData[currentIndex].answer;\n\n      // Check if the answer is correct and update feedback message\n      const feedback = answer === correctAnswer ? 'Correct!' : 'Incorrect!';\n\n      // Check if the answer is correct and increment the score if needed\n      if (answer === correctAnswer) {\n        this.setState(prevState => ({\n          score: prevState.score + 1\n        }));\n      }\n\n      // Disable options temporarily to prevent multiple selections\n      this.setState({\n        disabled: true,\n        feedback\n      });\n\n      // Delay moving to the next question to allow feedback to be displayed (you can adjust the delay time)\n      setTimeout(() => {\n        this.nextQuestionHandler();\n      }, 1000); // 1 second delay before moving to the next question\n    };\n    // Function to move to the next question\n    this.nextQuestionHandler = () => {\n      const {\n        currentIndex\n      } = this.state;\n      if (currentIndex + 1 < QuizData.length) {\n        // If there are more questions, move to the next one\n        this.setState(prevState => ({\n          currentIndex: prevState.currentIndex + 1,\n          userAnswer: null,\n          disabled: false,\n          // Enable options for the next question\n          feedback: null // Clear feedback message for the next question\n        }));\n      } else {\n        // If there are no more questions, finish the quiz\n        this.finishHandler();\n      }\n    };\n    // Function to handle finishing the quiz\n    this.finishHandler = () => {\n      this.setState({\n        quizEnd: true\n      });\n    };\n    // Function to handle user's radio button selection\n    this.handleRadioChange = event => {\n      this.setState({\n        userAnswer: event.target.value,\n        disabled: false // Enable the \"Next\" button after the user selects an option\n      });\n    };\n  }\n\n  render() {\n    const {\n      currentIndex,\n      quizEnd,\n      feedback\n    } = this.state;\n    const currentQuestion = QuizData[currentIndex];\n    if (quizEnd) {\n      // Render quiz results or a \"Quiz completed\" message\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Quiz completed! Your score is \", this.state.score, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Question \", currentIndex + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), feedback && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"option\",\n            id: `option-${index}`,\n            value: option,\n            checked: this.state.userAnswer === option,\n            onChange: this.handleRadioChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `option-${index}`,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleOptionClick.bind(this, this.state.userAnswer),\n        disabled: this.state.disabled,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Quiz;","map":{"version":3,"names":["React","Component","QuizData","jsxDEV","_jsxDEV","Quiz","constructor","args","state","userAnswer","currentIndex","options","quizEnd","score","disabled","feedback","handleOptionClick","answer","correctAnswer","setState","prevState","setTimeout","nextQuestionHandler","length","finishHandler","handleRadioChange","event","target","value","render","currentQuestion","children","fileName","_jsxFileName","lineNumber","columnNumber","question","map","option","index","type","name","id","checked","onChange","htmlFor","onClick","bind"],"sources":["C:/Users/JoscelynD/Desktop/Wise2/projects/Mod2Project/quiz-app/src/components/Quiz.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport QuizData from './QuizData';\r\n\r\nexport class Quiz extends Component {\r\n  state = {\r\n    userAnswer: null,\r\n    currentIndex: 0,\r\n    options: [],\r\n    quizEnd: false,\r\n    score: 0,\r\n    disabled: true,\r\n    feedback: null, // New state to store feedback message\r\n  };\r\n  // Function to handle user's answer selection and go to the next question\r\n  handleOptionClick = (answer) => {\r\n    const { currentIndex } = this.state;\r\n    const correctAnswer = QuizData[currentIndex].answer;\r\n\r\n    // Check if the answer is correct and update feedback message\r\n    const feedback = answer === correctAnswer ? 'Correct!' : 'Incorrect!';\r\n\r\n    // Check if the answer is correct and increment the score if needed\r\n    if (answer === correctAnswer) {\r\n      this.setState((prevState) => ({\r\n        score: prevState.score + 1,\r\n      }));\r\n    }\r\n\r\n    // Disable options temporarily to prevent multiple selections\r\n    this.setState({ disabled: true, feedback });\r\n\r\n    // Delay moving to the next question to allow feedback to be displayed (you can adjust the delay time)\r\n    setTimeout(() => {\r\n      this.nextQuestionHandler();\r\n    }, 1000); // 1 second delay before moving to the next question\r\n  };\r\n\r\n  // Function to move to the next question\r\n  nextQuestionHandler = () => {\r\n    const { currentIndex } = this.state;\r\n    if (currentIndex + 1 < QuizData.length) {\r\n      // If there are more questions, move to the next one\r\n      this.setState((prevState) => ({\r\n        currentIndex: prevState.currentIndex + 1,\r\n        userAnswer: null,\r\n        disabled: false, // Enable options for the next question\r\n        feedback: null, // Clear feedback message for the next question\r\n      }));\r\n    } else {\r\n      // If there are no more questions, finish the quiz\r\n      this.finishHandler();\r\n    }\r\n  };\r\n\r\n  // Function to handle finishing the quiz\r\n  finishHandler = () => {\r\n    this.setState({ quizEnd: true });\r\n  };\r\n\r\n  // Function to handle user's radio button selection\r\n  handleRadioChange = (event) => {\r\n    this.setState({\r\n      userAnswer: event.target.value,\r\n      disabled: false, // Enable the \"Next\" button after the user selects an option\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { currentIndex, quizEnd, feedback } = this.state;\r\n    const currentQuestion = QuizData[currentIndex];\r\n\r\n    if (quizEnd) {\r\n      // Render quiz results or a \"Quiz completed\" message\r\n      return <div>Quiz completed! Your score is {this.state.score}.</div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h2>Question {currentIndex + 1}</h2>\r\n        <h3>{currentQuestion.question}</h3>\r\n        {feedback && <p>{feedback}</p>} \r\n        <ul>\r\n          {currentQuestion.options.map((option, index) => (\r\n            <li key={index}>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"option\"\r\n                id={`option-${index}`}\r\n                value={option}\r\n                checked={this.state.userAnswer === option}\r\n                onChange={this.handleRadioChange}\r\n              />\r\n              <label htmlFor={`option-${index}`}>{option}</label>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <button\r\n          onClick={this.handleOptionClick.bind(this, this.state.userAnswer)}\r\n          disabled={this.state.disabled}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}