{"ast":null,"code":"import React, { Component } from 'react';\nimport QuizData from './QuizData';\nexport class Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userAnswer: null,\n      currentIndex: 0,\n      options: [],\n      quizEnd: false,\n      score: 0,\n      disabled: true,\n      feedback: null // New state to store feedback message\n    };\n    // Function to handle user's answer selection and go to the next question\n    this.handleOptionClick = answer => {\n      const {\n        currentIndex\n      } = this.state;\n      const correctAnswer = QuizData[currentIndex].answer;\n\n      // Check if the answer is correct and update feedback message\n      const feedback = answer === correctAnswer ? 'Correct!' : 'Incorrect!';\n\n      // Check if the answer is correct and increment the score if needed\n      if (answer === correctAnswer) {\n        this.setState(prevState => ({\n          score: prevState.score + 1\n        }));\n      }\n\n      // Disable options temporarily to prevent multiple selections\n      this.setState({\n        disabled: true,\n        feedback\n      });\n\n      // Delay moving to the next question to allow feedback to be displayed (you can adjust the delay time)\n      setTimeout(() => {\n        this.nextQuestionHandler();\n      }, 1000); // 1 second delay before moving to the next question\n    };\n    // Function to move to the next question\n    this.nextQuestionHandler = () => {\n      const {\n        currentIndex\n      } = this.state;\n      if (currentIndex + 1 < QuizData.length) {\n        // If there are more questions, move to the next one\n        this.setState(prevState => ({\n          currentIndex: prevState.currentIndex + 1,\n          userAnswer: null,\n          disabled: false,\n          // Enable options for the next question\n          feedback: null // Clear feedback message for the next question\n        }));\n      } else {\n        // If there are no more questions, finish the quiz\n        this.finishHandler();\n      }\n    };\n    // Function to handle finishing the quiz\n    this.finishHandler = () => {\n      this.setState({\n        quizEnd: true\n      });\n    };\n    // Function to handle user's radio button selection\n    this.handleRadioChange = event => {\n      this.setState({\n        userAnswer: event.target.value,\n        disabled: false // Enable the \"Next\" button after the user selects an option\n      });\n    };\n  }\n}\n\nexport default Quiz;","map":{"version":3,"names":["React","Component","QuizData","Quiz","constructor","args","state","userAnswer","currentIndex","options","quizEnd","score","disabled","feedback","handleOptionClick","answer","correctAnswer","setState","prevState","setTimeout","nextQuestionHandler","length","finishHandler","handleRadioChange","event","target","value"],"sources":["C:/Users/JoscelynD/Desktop/Wise2/projects/Mod2Project/quiz-app/src/components/Quiz.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport QuizData from './QuizData';\r\n\r\nexport class Quiz extends Component {\r\n  state = {\r\n    userAnswer: null,\r\n    currentIndex: 0,\r\n    options: [],\r\n    quizEnd: false,\r\n    score: 0,\r\n    disabled: true,\r\n    feedback: null, // New state to store feedback message\r\n  };\r\n\r\n  // Function to handle user's answer selection and go to the next question\r\n  handleOptionClick = (answer) => {\r\n    const { currentIndex } = this.state;\r\n    const correctAnswer = QuizData[currentIndex].answer;\r\n\r\n    // Check if the answer is correct and update feedback message\r\n    const feedback = answer === correctAnswer ? 'Correct!' : 'Incorrect!';\r\n\r\n    // Check if the answer is correct and increment the score if needed\r\n    if (answer === correctAnswer) {\r\n      this.setState((prevState) => ({\r\n        score: prevState.score + 1,\r\n      }));\r\n    }\r\n\r\n    // Disable options temporarily to prevent multiple selections\r\n    this.setState({ disabled: true, feedback });\r\n\r\n    // Delay moving to the next question to allow feedback to be displayed (you can adjust the delay time)\r\n    setTimeout(() => {\r\n      this.nextQuestionHandler();\r\n    }, 1000); // 1 second delay before moving to the next question\r\n  };\r\n\r\n  // Function to move to the next question\r\n  nextQuestionHandler = () => {\r\n    const { currentIndex } = this.state;\r\n    if (currentIndex + 1 < QuizData.length) {\r\n      // If there are more questions, move to the next one\r\n      this.setState((prevState) => ({\r\n        currentIndex: prevState.currentIndex + 1,\r\n        userAnswer: null,\r\n        disabled: false, // Enable options for the next question\r\n        feedback: null, // Clear feedback message for the next question\r\n      }));\r\n    } else {\r\n      // If there are no more questions, finish the quiz\r\n      this.finishHandler();\r\n    }\r\n  };\r\n\r\n  // Function to handle finishing the quiz\r\n  finishHandler = () => {\r\n    this.setState({ quizEnd: true });\r\n  };\r\n\r\n  // Function to handle user's radio button selection\r\n  handleRadioChange = (event) => {\r\n    this.setState({\r\n      userAnswer: event.target.value,\r\n      disabled: false, // Enable the \"Next\" button after the user selects an option\r\n    });\r\n  };\r\n\r\n \r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,YAAY;AAEjC,OAAO,MAAMC,IAAI,SAASF,SAAS,CAAC;EAAAG,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAClCC,KAAK,GAAG;MACNC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,CAAC;MACfC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,IAAI,CAAE;IAClB,CAAC;IAED;IAAA,KACAC,iBAAiB,GAAIC,MAAM,IAAK;MAC9B,MAAM;QAAEP;MAAa,CAAC,GAAG,IAAI,CAACF,KAAK;MACnC,MAAMU,aAAa,GAAGd,QAAQ,CAACM,YAAY,CAAC,CAACO,MAAM;;MAEnD;MACA,MAAMF,QAAQ,GAAGE,MAAM,KAAKC,aAAa,GAAG,UAAU,GAAG,YAAY;;MAErE;MACA,IAAID,MAAM,KAAKC,aAAa,EAAE;QAC5B,IAAI,CAACC,QAAQ,CAAEC,SAAS,KAAM;UAC5BP,KAAK,EAAEO,SAAS,CAACP,KAAK,GAAG;QAC3B,CAAC,CAAC,CAAC;MACL;;MAEA;MACA,IAAI,CAACM,QAAQ,CAAC;QAAEL,QAAQ,EAAE,IAAI;QAAEC;MAAS,CAAC,CAAC;;MAE3C;MACAM,UAAU,CAAC,MAAM;QACf,IAAI,CAACC,mBAAmB,CAAC,CAAC;MAC5B,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ,CAAC;IAED;IAAA,KACAA,mBAAmB,GAAG,MAAM;MAC1B,MAAM;QAAEZ;MAAa,CAAC,GAAG,IAAI,CAACF,KAAK;MACnC,IAAIE,YAAY,GAAG,CAAC,GAAGN,QAAQ,CAACmB,MAAM,EAAE;QACtC;QACA,IAAI,CAACJ,QAAQ,CAAEC,SAAS,KAAM;UAC5BV,YAAY,EAAEU,SAAS,CAACV,YAAY,GAAG,CAAC;UACxCD,UAAU,EAAE,IAAI;UAChBK,QAAQ,EAAE,KAAK;UAAE;UACjBC,QAAQ,EAAE,IAAI,CAAE;QAClB,CAAC,CAAC,CAAC;MACL,CAAC,MAAM;QACL;QACA,IAAI,CAACS,aAAa,CAAC,CAAC;MACtB;IACF,CAAC;IAED;IAAA,KACAA,aAAa,GAAG,MAAM;MACpB,IAAI,CAACL,QAAQ,CAAC;QAAEP,OAAO,EAAE;MAAK,CAAC,CAAC;IAClC,CAAC;IAED;IAAA,KACAa,iBAAiB,GAAIC,KAAK,IAAK;MAC7B,IAAI,CAACP,QAAQ,CAAC;QACZV,UAAU,EAAEiB,KAAK,CAACC,MAAM,CAACC,KAAK;QAC9Bd,QAAQ,EAAE,KAAK,CAAE;MACnB,CAAC,CAAC;IACJ,CAAC;EAAA;AAGH;;AAEA,eAAeT,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}