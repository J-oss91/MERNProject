{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JoscelynD\\\\Desktop\\\\Wise2\\\\projects\\\\Mod2Project\\\\quiz-app\\\\src\\\\components\\\\Quiz.js\";\nimport React, { Component } from 'react';\nimport QuizData from './QuizData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userAnswer: null,\n      currentIndex: 0,\n      options: [],\n      quizEnd: false,\n      score: 0,\n      disabled: true\n    };\n    this.handleOptionClick = answer => {\n      if (answer === QuizData[this.state.currentIndex].answer) {\n        this.setState(prevState => ({\n          score: prevState.score + 1\n        }));\n      }\n      this.setState({\n        disabled: true\n      });\n      setTimeout(() => {\n        this.nextQuestionHandler();\n      }, 1000);\n    };\n    this.nextQuestionHandler = () => {\n      const {\n        currentIndex\n      } = this.state;\n      if (currentIndex + 1 < QuizData.length) {\n        this.setState(prevState => ({\n          currentIndex: prevState.currentIndex + 1,\n          userAnswer: null,\n          disabled: false\n        }));\n      } else {\n        // If there are no more questions, finish the quiz\n        this.finishHandler();\n      }\n    };\n    // Function to handle finishing the quiz\n    this.finishHandler = () => {\n      this.setState({\n        quizEnd: true\n      });\n    };\n    // Function to handle user's radio button selection\n    this.handleRadioChange = event => {\n      this.setState({\n        userAnswer: event.target.value,\n        disabled: false // Enable the \"Next\" button after the user selects an option\n      });\n    };\n  }\n\n  render() {\n    const {\n      currentIndex,\n      quizEnd\n    } = this.state;\n    if (quizEnd) {\n      // Render quiz results or a \"Quiz completed\" message\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Quiz completed! Your score is \", this.state.score, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: QuizData[currentIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: QuizData[currentIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"option\",\n            id: `option-${index}`,\n            value: option,\n            checked: this.state.userAnswer === option,\n            onChange: this.handleRadioChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `option-${index}`,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleOptionClick.bind(this, this.state.userAnswer),\n        disabled: this.state.disabled,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Quiz;","map":{"version":3,"names":["React","Component","QuizData","jsxDEV","_jsxDEV","Quiz","constructor","args","state","userAnswer","currentIndex","options","quizEnd","score","disabled","handleOptionClick","answer","setState","prevState","setTimeout","nextQuestionHandler","length","finishHandler","handleRadioChange","event","target","value","render","children","fileName","_jsxFileName","lineNumber","columnNumber","question","map","option","index","type","name","id","checked","onChange","htmlFor","onClick","bind"],"sources":["C:/Users/JoscelynD/Desktop/Wise2/projects/Mod2Project/quiz-app/src/components/Quiz.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport QuizData from './QuizData';\r\n\r\nexport class Quiz extends Component {\r\n  state = {\r\n    userAnswer: null,\r\n    currentIndex: 0,\r\n    options: [],\r\n    quizEnd: false,\r\n    score: 0,\r\n    disabled: true,\r\n  };\r\n\r\n  \r\n  handleOptionClick = (answer) => {\r\n    if (answer === QuizData[this.state.currentIndex].answer) {\r\n      this.setState((prevState) => ({\r\n        score: prevState.score + 1,\r\n      }));\r\n    }\r\n\r\n    this.setState({ disabled: true });\r\n\r\n  \r\n    setTimeout(() => {\r\n      this.nextQuestionHandler();\r\n    }, 1000); \r\n  };\r\n\r\n  \r\n  nextQuestionHandler = () => {\r\n    const { currentIndex } = this.state;\r\n    if (currentIndex + 1 < QuizData.length) {\r\n    \r\n      this.setState((prevState) => ({\r\n        currentIndex: prevState.currentIndex + 1,\r\n        userAnswer: null,\r\n        disabled: false, \r\n      }));\r\n    } else {\r\n      // If there are no more questions, finish the quiz\r\n      this.finishHandler();\r\n    }\r\n  };\r\n\r\n  // Function to handle finishing the quiz\r\n  finishHandler = () => {\r\n    this.setState({ quizEnd: true });\r\n  };\r\n\r\n  // Function to handle user's radio button selection\r\n  handleRadioChange = (event) => {\r\n    this.setState({\r\n      userAnswer: event.target.value,\r\n      disabled: false, // Enable the \"Next\" button after the user selects an option\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { currentIndex, quizEnd } = this.state;\r\n\r\n    if (quizEnd) {\r\n      // Render quiz results or a \"Quiz completed\" message\r\n      return <div>Quiz completed! Your score is {this.state.score}.</div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h2>{QuizData[currentIndex].question}</h2>\r\n        <ul>\r\n          {QuizData[currentIndex].options.map((option, index) => (\r\n            <li key={index}>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"option\"\r\n                id={`option-${index}`}\r\n                value={option}\r\n                checked={this.state.userAnswer === option}\r\n                onChange={this.handleRadioChange}\r\n              />\r\n              <label htmlFor={`option-${index}`}>{option}</label>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <button\r\n          onClick={this.handleOptionClick.bind(this, this.state.userAnswer)}\r\n          disabled={this.state.disabled}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}