{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JoscelynD\\\\Desktop\\\\Wise2\\\\projects\\\\Mod2Project\\\\quiz-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { BrowserRouter as Router, Route } from 'react-router-dom';\n// import './style.css';\n// import Quiz from './components/Quiz';\n// import HomePage from './pages/HomePage';\n// import ResultPage from './pages/ResultPage';\n\n// function App() {\n//   const [quizStarted, setQuizStarted] = useState(false);\n//   const [quizEnd, setQuizEnd] = useState(false);\n//   const [score, setScore] = useState(0);\n\n//   const finishHandler = () => {\n//     setQuizEnd(true);\n//   };\n\n//   const startQuizHandler = () => {\n//     setQuizStarted(true);\n//     setQuizEnd(false);\n//     setScore(0);\n//   };\n\n//   return (\n//     <div className=\"App\">\n\n//       <Router>\n//         <Switch>\n\n//           <Route path=\"/result\">\n//             <ResultPage score={score} totalQuestions={QuizData.length} />\n//           </Route>\n\n//           <Route path=\"/quiz\">\n//             <Quiz questions={QuizData} finishHandler={finishHandler} />\n//           </Route>\n\n//           <Route exact path=\"/\">\n//             <HomePage startQuizHandler={startQuizHandler} />\n//           </Route>\n//         </Switch>\n//       </Router>\n//       {quizEnd && <p>Quiz has ended!</p>}\n//       {quizStarted && <p>Quiz is in progress...</p>}\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './style.css';\nimport Quiz from './components/Quiz';\nimport HomePage from './pages/HomePage';\nimport ResultPage from './pages/ResultPage';\nimport QuizData from './components/QuizData'; // Make sure to provide the correct path to your quiz data file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [quizEnd, setQuizEnd] = useState(false);\n  const [score, setScore] = useState(0);\n  const finishHandler = () => {\n    setQuizEnd(true);\n  };\n  const startQuizHandler = () => {\n    setQuizStarted(true);\n    setQuizEnd(false);\n    setScore(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: quizStarted ? quizEnd ? /*#__PURE__*/_jsxDEV(ResultPage, {\n          score: score,\n          totalQuestions: QuizData.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Quiz, {\n          questions: QuizData,\n          finishHandler: finishHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(HomePage, {\n          startQuizHandler: startQuizHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RqRhV6IzHPgJYhbQoe0uC8ilM2E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Quiz","HomePage","ResultPage","QuizData","jsxDEV","_jsxDEV","App","_s","quizStarted","setQuizStarted","quizEnd","setQuizEnd","score","setScore","finishHandler","startQuizHandler","className","children","exact","path","totalQuestions","length","fileName","_jsxFileName","lineNumber","columnNumber","questions","_c","$RefreshReg$"],"sources":["C:/Users/JoscelynD/Desktop/Wise2/projects/Mod2Project/quiz-app/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { BrowserRouter as Router, Route } from 'react-router-dom';\r\n// import './style.css';\r\n// import Quiz from './components/Quiz';\r\n// import HomePage from './pages/HomePage';\r\n// import ResultPage from './pages/ResultPage';\r\n\r\n// function App() {\r\n//   const [quizStarted, setQuizStarted] = useState(false);\r\n//   const [quizEnd, setQuizEnd] = useState(false);\r\n//   const [score, setScore] = useState(0);\r\n\r\n//   const finishHandler = () => {\r\n//     setQuizEnd(true);\r\n//   };\r\n\r\n//   const startQuizHandler = () => {\r\n//     setQuizStarted(true);\r\n//     setQuizEnd(false);\r\n//     setScore(0);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n     \r\n//       <Router>\r\n//         <Switch>\r\n         \r\n//           <Route path=\"/result\">\r\n//             <ResultPage score={score} totalQuestions={QuizData.length} />\r\n//           </Route>\r\n\r\n         \r\n//           <Route path=\"/quiz\">\r\n//             <Quiz questions={QuizData} finishHandler={finishHandler} />\r\n//           </Route>\r\n\r\n         \r\n//           <Route exact path=\"/\">\r\n//             <HomePage startQuizHandler={startQuizHandler} />\r\n//           </Route>\r\n//         </Switch>\r\n//       </Router>\r\n//       {quizEnd && <p>Quiz has ended!</p>}\r\n//       {quizStarted && <p>Quiz is in progress...</p>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport './style.css';\r\nimport Quiz from './components/Quiz';\r\nimport HomePage from './pages/HomePage';\r\nimport ResultPage from './pages/ResultPage';\r\nimport QuizData from './components/QuizData'; // Make sure to provide the correct path to your quiz data file\r\n\r\nfunction App() {\r\n  const [quizStarted, setQuizStarted] = useState(false);\r\n  const [quizEnd, setQuizEnd] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n\r\n  const finishHandler = () => {\r\n    setQuizEnd(true);\r\n  };\r\n\r\n  const startQuizHandler = () => {\r\n    setQuizStarted(true);\r\n    setQuizEnd(false);\r\n    setScore(0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        {/* Define your routes here */}\r\n        <Route exact path=\"/\">\r\n          {/* Use conditional rendering to display the appropriate component */}\r\n          {quizStarted ? (\r\n            quizEnd ? (\r\n              <ResultPage score={score} totalQuestions={QuizData.length} />\r\n            ) : (\r\n              <Quiz questions={QuizData} finishHandler={finishHandler} />\r\n            )\r\n          ) : (\r\n            <HomePage startQuizHandler={startQuizHandler} />\r\n          )}\r\n        </Route>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACjE,OAAO,aAAa;AACpB,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,QAAQ,MAAM,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMkB,aAAa,GAAGA,CAAA,KAAM;IAC1BH,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC7BN,cAAc,CAAC,IAAI,CAAC;IACpBE,UAAU,CAAC,KAAK,CAAC;IACjBE,QAAQ,CAAC,CAAC,CAAC;EACb,CAAC;EAED,oBACER,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBZ,OAAA,CAACP,MAAM;MAAAmB,QAAA,eAELZ,OAAA,CAACN,KAAK;QAACmB,KAAK;QAACC,IAAI,EAAC,GAAG;QAAAF,QAAA,EAElBT,WAAW,GACVE,OAAO,gBACLL,OAAA,CAACH,UAAU;UAACU,KAAK,EAAEA,KAAM;UAACQ,cAAc,EAAEjB,QAAQ,CAACkB;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAE7DpB,OAAA,CAACL,IAAI;UAAC0B,SAAS,EAAEvB,QAAS;UAACW,aAAa,EAAEA;QAAc;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAC3D,gBAEDpB,OAAA,CAACJ,QAAQ;UAACc,gBAAgB,EAAEA;QAAiB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAChD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAClB,EAAA,CAlCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}